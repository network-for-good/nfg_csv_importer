// Embedded icons from Open Iconic.
// Released under MIT and copyright 2014 Waybury.
// http://useiconic.com/open


// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.c-input {
  display: inline-block;
  margin-bottom: 0;
  @include rem(padding-top, 4px);
  @include rem(padding-left, $spacer-base);
  @include rem(padding-bottom, 4px);
  min-width: 20px;
  min-height: 20px;
  @include rem(font-size, $font-size-sm);
  line-height: $input-line-height;
  color: $font-color-primary;
  vertical-align: text-top;
  &:hover {
    input {
      ~ .c-indicator:after { color: $font-color-primary; }
    }
  }
  &:empty { cursor: default; }
  &.disabled, &:disabled, &[disabled] {
    color: $input-color-disabled !important;
    border-color: $input-border-color-disabled !important;
    pointer-events: none;
    cursor: $cursor-disabled;
    .c-indicator {
      pointer-events: none;
      cursor: $cursor-disabled;
      &:before, &:after { color: $input-color-disabled !important; }
    }
    &.c-input-image {
      .c-indicator:before, .c-indicator:after { color: $input-border-color-disabled !important; }
    }
  }
  input {
    position: absolute;
    z-index: -1;
    opacity: 0;
  }

  + .c-input { @include rem(margin-left, $spacer-half); }
}
.media-left > .c-input { padding: 0; } // Removes default padding on checkbox or radios within media-left (ex. used in slats and tasks)

// Custom indicator
//
// Generates a shadow element to create our makeshift checkbox/radio background.
.c-indicator {
  @include rem(top, 2px);
  width: 20px;
  height: 20px;
  line-height: 1;
  background: none !important;
  box-shadow: none !important;
  border-radius: none !important;
  cursor: pointer;
  &:before, &:after {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 20px;
    height: 20px;
    font-family: $icon-font-family;
    @include rem(font-size, 20px);
    color: $border-color-primary;
    text-align: left;
    cursor: pointer;
    @include transition(color .15s ease-in-out, opacity .15s ease-in-out);
  }
  &:before {
    z-index: 20;
    opacity: 0;
  }
  &:after {
    z-index: 10;
    opacity: 1;
  }
}

// Checkboxes
//
// Tweak just a few things for checkboxes.
.c-checkbox {
  .c-indicator {
    &:before { content: '\f046'; } // check
    &:after { content: '\f096'; } // check-empty
  }

  input:checked ~ .c-indicator {
    &:before {
      color: $brand-primary;
      opacity: 1;
    }
    &:after { opacity: 0; }
  }
}

// Radios
//
// Tweak just a few things for radios.
.c-radio {
  .c-indicator {
    &:before { content: '\f192'; } // circle-full
    &:after { content: '\f1db'; } // thin-circle-empty
  }

  input:checked ~ .c-indicator {
    &:before {
      color: $brand-primary;
      opacity: 1;
    }
    &:after { opacity: 0; }
  }
}

// Layout options
//
// By default radios and checkboxes are `inline-block` with no additional spacing
// set. Use these optional classes to tweak the layout.
.c-inputs-stacked {
  .c-input {
    display: block;
    + .c-input { @include rem(margin-top, 8px); }
  }
}

// Image Options
//
// Used for images in tandem with radio/checkboxes
.c-input-image {
  @include flexbox();
  @include flex-direction(column);
  @include flex(1 0 auto);

  img {
    max-width: 100%;
    height: auto;
    @include flex-shrink(0);
    min-height: 1px;
    @include align-self(center);
  }
  @include rem(padding, $spacer-half $spacer-half $spacer-double);
  background-color: $white;
  &:hover {
    .c-indicator { border-color: $gray-dark; }
  }
  .c-indicator {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: $border-width solid $btn-secondary-border;
    @include border-radius($btn-border-radius);
    @include transition(border .15s ease-in-out);
    &:before, &:after {
      top: auto;
      @include rem(bottom, $spacer-half);
      left: 50%;
      @include rem(margin-left, -10px);
    }
  }
  input:checked ~ .c-indicator {
    border-color: $brand-primary;
  }
}

// Radio-less Image Radios
.c-input-image:not(.c-radio){
  height: 100%;

  img{
    z-index: 10;
    position: relative;
  }
  h6, p{
    @include transition(color 0.15s ease-in-out);
    position: relative;
    z-index: 10 !important;
  }
  @include rem(padding-bottom, $spacer-half);
  .c-indicator{
    border: solid 1px $white;
    @include transition(border 0.15s ease-in-out);

  }

  &:hover{
    .c-indicator{
      ~ h6{ color: $brand-primary !important; }
   }
  }

  input:checked{
    ~ .c-indicator{
      + h6{ color: $brand-primary !important; }
    }
  }
}

// Toggle styles
.c-toggle {
  position: relative;
  display: block;
  padding-left: ($spacer * 2.25);
  min-height: $spacer;
  font-size: 16px;
  line-height: 1.5;
  input {
    position: absolute;
    z-index: -1; // Put the input behind the label so it doesn't overlay text
    opacity: 0;
  }
  .c-indicator {
    position: relative;
    top: auto;
    left: auto;
    display: inline-block;
    width: auto;
    height: auto;
    margin-bottom: 0;
    vertical-align: top;
    &::before, &::after {
      position: absolute;
      left: -($spacer * 2.25);
      opacity: 1;
    }
    &::before {
      top: .3rem;
      display: block;
      width: 4.8rem;
      height: 1.8rem;
      padding-left: 28px;
      font-size: 12px;
      line-height: 16px;
      font-family: "FontAwesome";
      color: #959595;
      background-color: #f7f7f7;
      border: 1px solid #d8d8d8;
      pointer-events: all;
      box-shadow: none;
      border-radius: .9rem;
      @include transition (background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out);
      content: '\f00d';
      z-index: 0;
    }
    &::after {
      top: 0;
      width: $spacer;
      height: $spacer;
      background-color: #fff;
      border: 1px solid #d8d8d8;
      border-radius: 50%;
      cursor: pointer;
      @include transition(transform .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out);
      content: '';
      z-index: 10;
    }
  }
  input:checked ~ .c-indicator {
    &::before {
      color: #fff;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
      background-color: $brand-primary;
      background-position: 6px 1px;
      background-size: 30%;
      background-repeat: no-repeat;
      border-color: $brand-primary;
      content: '';
    }
    &::after {
      border-color: $brand-primary;
      transform: translateX($spacer);
    }
  }
  + .c-toggle { @include rem(margin-top, $spacer-half); } // spacing for multiple options
}

// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// http://primercss.io.
//
// Includes IE9-specific hacks (noted by ` \9`).

.c-select {
  cursor: pointer;
  @include rem(padding, 0 $spacer-base-half 0 $input-padding-x);
  padding-right: $spacer-triple \9;
  height: 36px;
  font-weight: $btn-font-weight;
  @include rem(font-size, $btn-font-size);
  line-height: 1.2;
  color: $btn-secondary-color;
  background-color: $btn-secondary-bg;
  background: $btn-secondary-bg image-url('ux/icon-select-arrow.png') no-repeat;
  background-size: 12px 8px;
  background-position: right 13px top 14px;
  border: $border-width solid $btn-secondary-border;
  @include border-radius($btn-border-radius);
  @include transition(border 300ms ease, background-color 300ms ease, color 300ms ease);
  // Use vendor prefixes as `appearance` isn't part of the CSS spec.
  text-indent: 0.01px; // Removes arrow in Firefox
  text-overflow: ''; // Removes arrow in Firefox
  cursor: pointer;
  outline: none;
  @include hover-focus {
    color: $font-color-primary;
    background-color: $bg-color-primary;
    border-color: $btn-secondary-border;
    @include box-shadow(none);
  }

  // Hides the default caret in IE11
  &::-ms-expand {
    opacity: 0;
  }

  &[disabled],
  &.disabled,
  &:disabled{
    color: $input-color-disabled;
    background-color: $input-bg-disabled;
    border-color: $input-border-color-disabled;
    pointer-events: none;
    cursor: $cursor-disabled;
    @include box-shadow(none);
  }
}

.c-select-sm {
  padding-top: 3px;
  padding-bottom: 3px;
  @include rem(font-size, $font-size-xs);

  &:not([multiple]) {
    height: 26px;
    min-height: 26px;
  }
}


// File
//
// Custom file input.

.file {
  margin-bottom: 0;
  width: 100%;
  height: auto;
}
.file input[type='file'] {
  position: relative;
  display: inline-block;
  @include rem(padding, 8px (132px) 8px $input-padding-x);
  min-width: 20%;
  max-width: 100%;
  @include rem(height, $input-height);
  margin-bottom: 0;
  @include rem(font-size, $input-font-size);
  line-height: $input-line-height;
  color: $font-color-primary;
  background-color: $white;
  border: $border-width solid $input-border-color;
  cursor: pointer;
  opacity: 1;
  outline: none;
  vertical-align: middle;
  @include border-radius(0 $btn-border-radius $btn-border-radius 0);
  @include transition(border .15s ease-in-out, background-color .15s ease-in-out, color .15s ease-in-out);
  &:focus { border-color: $input-border-focus; }
  &:after {
    position: absolute;
    top: -$border-width;
    right: -$border-width;
    display: inline-block;
    z-index: 10;
    @include rem(padding, $btn-padding-y $btn-padding-x);
    min-width: 120px;
    max-width: 100%;
    @include rem(height, $input-height);
    font-weight: $font-weight-medium;
    font-size: $btn-font-size;
    line-height: $btn-line-height;
    color: $brand-primary;
    text-align: center;
    background-color: $white;
    border: $border-width solid $btn-secondary-border;
    cursor: pointer;
    content: 'Choose File';
    @include border-radius(0 $btn-border-radius $btn-border-radius 0);
    @include transition(border .15s ease-in-out, background-color .15s ease-in-out, color .15s ease-in-out);
  }
  @include hover-focus {
    &:after {
      color: $font-color-primary;
      background-color: $bg-color-primary;
    }
  }
}
.file input[type='file']::-webkit-file-upload-button {
  width: 0;
  padding: 0;
  margin: 0;
  border: none;
  -webkit-appearance: none;
}
// IE10+ Hack
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) { // use this to target IE10+
  .file input[type='file'] {
    border: 0;
    padding: 0;
  }
}
// Firefox only styles
@-moz-document url-prefix() {
  .file input[type='file'] {
    margin-right: 0;
    min-width: 100%;
    max-width: 100%;
    @include rem(padding-top, 6px);
    @include rem(padding-bottom, 5px);
    height: auto;
    @include border-radius($input-border-radius);
    &:after { display: none; }
  }
}
.file-custom { display: none; }
.file-custom::before { display: none; }

// Focus state
.file input:focus ~ .file-custom { @include box-shadow(none); }
