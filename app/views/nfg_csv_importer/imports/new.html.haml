/ - case params[:import_type]
/ - when "individual_donation"
/   - container_new_import_background = "background-image: url(#{image_path 'nfg_csv_importer/row-individuals.jpg'})"
/ - else
/   - container_new_import_background = "background-image: none;"


.nfg-csv-importer
  = simple_form_for(@import, :url => nfg_csv_importer.imports_path) do |f|

    / Not yet setup.
    - if @import.errors.any?
      .bg-green
        = f.error_notification message: @import.errors.full_messages.join("<br/>").html_safe

    #new_import_row_1.container-new-import.blue.background-individuals
      .row.text-xs-center
        .col-xs-12
          %h1.display-1
            Let’s import
            %strong
              #{params[:import_type].humanize.pluralize.downcase if params[:import_type]}!

          %p
            This self-guided importing tool is here to give you the flxibility to import your own data whenever you need to.
      .row.text-xs-center
        .col-md-4
          = fa_stacked_icon "cloud-upload inverse", base: "circle", class: "fa-lg"
          %p.lead.text-blue
            Step 1
          %p.small.text-muted
            Upload & configure your spreadsheet on this page
        .col-md-4
          = fa_stacked_icon "columns inverse", base: "circle", class: "fa-lg"
          %p.lead.text-blue
            Step 2
          %p.small.text-muted
            Map your column headers so we can import your data
        .col-md-4
          = fa_stacked_icon "thumbs-o-up inverse", base: "circle", class: "fa-lg"
          %p.lead.text-blue
            Step 3
          %p.small.text-muted
            Review your decisions and then approve the import
      .row.text-xs-center
        .col-xs-12
          %a.btn.btn-primary.btn-lg.m-t-base.m-b-half{ href: "javascript:;", data: { smooth_scroll_target: "#upload_file" } }
            = fa_icon "chevron-right", class: "m-l-quarter", text: "Ready? Upload Your File", right: true

          %p.small.text-muted
            %em or
          %p.small
            %em
              %a{ href: "javascript:;", data: { smooth_scroll_target: "#new_import_row_2" } }
                Scroll down to learn more

        %a.btn.btn-scroll-to.text-xs-center{ data: { smooth_scroll_target: "#new_import_row_2" } }
          = fa_icon "angle-down", class: "display-block text-green", text: "Next", right: true

    #new_import_row_2.container-new-import.green.background-success
      .row.text-xs-center
        .col-xs-12
          %h1.display-1
            Setting up for
            %strong
              success

          %p
            There are a few things you can do to help simplify this process and ensure that your data is properly imported. Also, consider starting from our
            %a.text-link{ bootstrap_tooltip("Coming soon", :bottom), href: "javascript:;" }
              %strong Excel template

          %p.small.m-b-quarter
            = fa_icon "asterisk", class: "text-green"
            %em Here’s a list of required columns that your spreadsheet must have:
          / TODO: Add optinoal / expandable descriptions for them when available (or see if this makes more sense in the expandable columns area)
          / Figure out how to bring in the validation columns in addition to the required columns, e.g.: if donations... donation date required, etc.
          .row
            .col-xs-12
              .label.label-default
                First name
              .label.label-default
                Donation date
              .label.label-default
                Amount
              .label.label-default
                Payment Method

      .row.text-xs-center.row-expander.row-xs-center
        .col-xs-12
          %a.text-link{ href: "javascript:;", data: { show_hide_target: "#import_type_column_descriptions" } }
            = fa_icon "angle-down", class: "display-block text-green", text: "Expand the full list of column headers", right: true

    #import_type_column_descriptions.container-new-import.bg-green{ data: { show_hide: "hide" } }
      .row
        .col-xs-12.display-flex
          %h2
            =params[:import_type].humanize.titleize if params[:import_type]
            Column Headers
          %a{ bootstrap_tooltip("Coming soon", :bottom), href: "javascript:;" }
            = fa_icon "cloud-download", class: "m-r-quarter", text: "Download a Cheatsheet"

      / Required
      - if @import.required_columns.any?
        %h3 Required Column Headers
        .row
          - @import.required_columns.each do |required_field|
            - description = @import.column_descriptions[required_field]

            .col-md-4{ style: "border:solid 3px #fff;" }
              .card.card-danger
                .card-block
                  %span.text-red *
                  %h4= required_field
                - if description.present?
                  .card-block
                    = description
      - if @import.optional_columns.any?
        %h3 Optional Column Headers
        .row
          - @import.optional_columns.each do |field|
            - description = @import.column_descriptions[field]
            .col-md-4
              .card
                .card-block
                  %h4= field
                - if description.present?
                  .card-block
                    = description

    #upload_file.container-new-import.blue.no-shadow
      .row.text-xs-center
        .col-xs-12
          %h1.display-1
            %strong
              Upload your spreadsheet
          %p
            Acceptable file types are:
            %strong
              csv, xls
            or
            %strong
              xlsx
      .row.p-b-triple
        .col-md-6.col-md-push-3.col-xs-12
          .form-group

            .position-relative
              .label.label-blue.label-top-left.label-circle 1
              %label.file
                = f.file_field :import_file
                %span.file-custom{ data: { content: "Choose your file..." } }
            = hidden_field_tag 'import_type', @import_type

          %hr.m-y-double

          .form-group.text-xs-center.m-b-base-half

            %label.label-heading.text-blue.m-b-0
              %em
                Optionally:
              pick your template
            %p.text-help
              %em
                This is useful in a scenario where you’re importing data from a source you use over and over again like accounting software

            .position-relative.display-inline-block
              .label.label-blue.label-top-left.label-circle 2
              %select.c-select
                %option Select a previous import to map your columns to
                %option My_file_name.xlsx &ndash; Oct. 12, 2016
          %button.btn.btn-primary.btn-lg.m-x-a.display-block{ :confirm => "Are you sure you want to import this file? Depending on the size of the file, this could take a few minutes.", disable_with: "Uploading and queueing, please wait..." }
            = fa_icon "chevron-right", class: "m-l-quarter", text: "Upload & Continue", right: true



  -# .import_new
    %h1.page
      Import #{params[:import_type].humanize if params[:import_type]}
    = simple_form_for(@import, :url => nfg_csv_importer.imports_path, :html => { :class => 'form-horizontal' }) do |f|

      = f.error_notification message: @import.errors.full_messages.join("<br/>").html_safe

      #required_fields.panel.panel-default
        .panel-heading
          %h3.panel-title
            Description

        .panel-body
          .list-group
            .list-group-item
              = simple_format(@import.description)
            .list-group-item
              = render partial: 'nfg_csv_importer/imports/import_fields', locals: { fields: @import.required_columns, header: 'Required Fields' }
            .list-group-item
              = render partial: 'nfg_csv_importer/imports/import_fields', locals: { fields: @import.optional_columns, header: 'Optional Fields' }
            .list-group-item
              %strong
                IMPORTANT:
              All date/time fields will be assumed to be in #{ @import.time_zone }
      .panel.panel-default
        .panel-heading
          %h3.panel-title
            Import
        .panel-body

          = f.input :import_file , :hint => "Select either csv,xls or xlsx file" do
            = f.file_field :import_file
          = hidden_field_tag 'import_type', @import_type
        .panel-footer
          = f.button :submit, 'Import', :class => 'btn btn-primary', :confirm => "Are you sure you want to import this file? Depending on the size of the file, this could take a few minutes.", disable_with: "Uploading and queueing, please wait..."
