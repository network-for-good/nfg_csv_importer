- import_presenter = local_assigns[:import_presenter]
- import = local_assigns[:import]
- language_scope = [:nfg_csv_importer, :imports, :index]
- imports_listing_row_column_structure_class = "" if local_assigns[:imports_listing_row_column_structure_class].nil?

- if import.can_be_viewed_by(current_user)
  = ui.nfg :slat, id: dom_id(import), data: { id: import.id, describe: 'import-slat', import_type: import&.import_type, status: import.status } do
    = ui.nfg :slat_body do
      = ui.nfg :slat_item, id: "#{dom_id(import)}_name" do
        = ui.nfg :typeface, subheading: import.imported_by_name, describe: 'imported-by-name'
        = ui.nfg :typeface, caption: import.updated_at.to_s(:abrev_month_yyyy), class: 'mb-0'
      = ui.nfg :slat_item, :md do
        = ui.nfg :typeface, subheading: import_presenter.file_origination_type_name, describe: 'file-origination-type'
        = ui.nfg :typeface, caption: import_status_link(import), class: 'mb-0'
      = ui.nfg :slat_item, describe: 'amount-of-records-without-errors' do
        = ui.nfg :typeface, subheading: number_of_records_without_errors_based_on_import_status(import)
      = ui.nfg :slat_item do
        = ui.nfg :typeface, subheading: number_of_records_with_errors_based_on_import_status(import)
    = ui.nfg :slat_actions, describe: "import_dropdown-#{import.id}" do
      - if import.pending_or_uploaded_or_calculating_statistics? && disable_import_initiation_message.blank?
        = ui.nfg :slat_action, href: nfg_csv_importer.edit_import_path(import), body: t("links.edit_import", scope: language_scope), icon: 'pencil', describe: 'edit-import', data: { turbolinks: false }
      - else
        = ui.nfg :slat_action, href: nfg_csv_importer.import_path(import), body: t("links.details", scope: language_scope), icon: 'info-circle', describe: 'import-details'
      - if import_presenter.show_slat_actions?
        = ui.nfg :slat_action, href: nfg_csv_importer.import_path(import, anchor: 'files'), body: t("links.download", scope: language_scope), icon: 'download', render_if: import_presenter.show_download_link?
        = ui.nfg :slat_action, href: nfg_csv_importer.import_path(import), method: :delete, confirm: import_delete_confirmation(import), body: t("links.delete_import", scope: language_scope), class: 'text-danger', icon: 'trash-o', render_if: import.can_be_deleted?(current_user)
