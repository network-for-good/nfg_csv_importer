- mapped_column = nil if local_assigns[:mapped_column].nil?
- import = nil if local_assigns[:import].nil?
- field_name = "import[fields_mapping[#{Base64.encode64(mapped_column.name)}]]"

- case mapped_column.status
- when :unmapped
  - mapped_column_name = mapped_column.name

- when :active
  - label_status = "success"
  - label_icon = "check-circle"
  - label_text = "Mapping Column"
  - mapped_column_name = mapped_column.name
- when :mapped
  - label_status = "success"
  - label_icon = "check-circle"
  - label_text = "Mapped"
  - mapped_column_name = mapped_column.mapped_to
- when :ignored
  - label_status = "danger"
  - label_icon = "exclamation-circle"
  - label_text = "Won't be imported"
  - mapped_column_name = mapped_column.name

.card-header{ id: "card_header_#{ mapped_column.dom_id }" }
  - unless mapped_column.status == :unmapped
    -# When mapping has wrapped up, have the label:
    -# 1. Fade out "Mapping column"
    -# 2. Slide the check mark to the right
    -# 3. Shrink label to fit checkmark
    -# 4. Expand label out to reveal "Mapped"
    %div{ class: "label label-pill label-#{label_status}" }
      / %i{ class: "fa #{label_icon} text-white" }
      = fa_icon "#{label_icon} inverse"
      = label_text
  .card-header-interactions
    - if (mapped_column.status == :ignored) || (mapped_column.status == :unmapped)
      %label.c-input.c-checkbox.m-b-quarter
        - ignore_checkbox_value = mapped_column.status == :ignored ? "" : "ignore_column"
        %input{ name: field_name, type: "checkbox", value: ignore_checkbox_value, checked: mapped_column.status == :ignored }
        %span.c-indicator
        %span.text-muted Ignore Column
    - else
      / todo: turn on this functionality and re-render the column header
      %a.m-b-quarter{ href: "javascript:;", data: { edit_column: "true" } }
        %i.fa.fa-pencil
        Edit Column


  .form-group
    - if mapped_column.status == :ignored
      = hidden_field_tag field_name, NfgCsvImporter::Import.ignore_column_value

    - elsif mapped_column.status == :unmapped
      - columns = [""] + import.all_valid_columns
      - display_names = columns.map { |c| import_column_display_name(import.import_type, c, true) }

      / we can't use humanize on the fields select options because it removes the
      / ID from the name of the field
      = select_tag field_name, options_for_select(display_names.zip(columns)), include_blank: false, prompt: "Select Header", class: "c-select", data: { describe: "select-column-header" }

    - else
      -# Kicks off edit, just like the edit button above.
      %a.h3.text-xs-center.m-t-half{ href: "javascript:;", data: { edit_column: "true" } }
        = import_column_display_name(import.import_type, mapped_column.mapped_to, true)
        %small{ title: "This column has been successfully mapped", data: { toggle: "tooltip", placement: "top" } }
          = fa_icon "check-circle", class: "text-success"
      = hidden_field_tag field_name



  %h4.h5.text-xs-center
    - if (mapped_column.status == :unmapped) || (mapped_column.status == :ignored)
      = mapped_column_name
      - unless mapped_column.status == :ignored
        %span.display-inline-block{ title: "This column hasn't been mapped yet", data: { toggle: "tooltip", placement: "top" } }
          = fa_icon "info-circle"
    - else
      %s.text-muted= mapped_column.name
