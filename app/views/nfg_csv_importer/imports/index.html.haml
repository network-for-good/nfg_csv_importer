- language_scope = [:imports, :index]
- count_of_import_types = ImportDefinition.import_types.size
- import_type_column_structure_classes = "display-flex"
- import_definitions = user_import_definitions(imported_for: @imported_for, user: current_user, definition_class: ImportDefinition, imported_by: @imported_by)
- start_button_options = import_definitions.size == 1 ? { href: NfgCsvImporter::Engine.routes.url_helpers.new_import_path(import_type: import_definitions.keys.first) } : { data: { show_hide_target: "#import_type_row", fade_out: "true" } }
- if count_of_import_types == 0
  - import_type_column_structure_classes << " col-md-6 col-xl-1"
- elsif count_of_import_types > 4
  - import_type_column_structure_classes << " col-md-6 col-xl-3"
- else
  - grid_size_by_dividing_count_of_imports_by_12 = ((12).fdiv(count_of_import_types)).round
  - import_type_column_structure_classes << " col-md-6 col-xl-#{grid_size_by_dividing_count_of_imports_by_12}"


.importer-gem{ data: { view_wrapper: "importer-gem" } }
  .container-fluid.container-flush.bg-white
    = render 'index_header', language_scope: language_scope, import_definitions: import_definitions, import_type_column_structure_classes: import_type_column_structure_classes, start_button_options: start_button_options

    = render(partial: 'shared/flash_messages') rescue nil

    - if @imports.empty?
      .container-fluid.container-flush.bg-white{ data: { set_full_page: "true" } }

    - else
      #imports_listing.row.p-x-3
        .col-xs-12
          .row
            .col-xs-12
              %h2= t("headings.past_imports", scope: language_scope)
          .row
            .col-xs-12
              .row.row-listing-header.m-b-1
                - imports_listing_row_column_structure_class = "col-md-2"

                %div{ class: imports_listing_row_column_structure_class }
                  %small= t("headings.imported_by_name", scope: language_scope)
                %div{ class: imports_listing_row_column_structure_class }
                  %small= t("headings.number_of_records", scope: language_scope)
                %div{ class: imports_listing_row_column_structure_class }
                  %small= t("headings.number_of_records_with_errors", scope: language_scope)
                %div{ class: imports_listing_row_column_structure_class }
                  %small= t("headings.updated_at", scope: language_scope)
                %div{ class: imports_listing_row_column_structure_class }
                  %small= t("headings.status", scope: language_scope)
                %div{ class: imports_listing_row_column_structure_class }
              = render partial: "import", collection: @imports, locals: { imports_listing_row_column_structure_class: imports_listing_row_column_structure_class }
              .row.p-y-1
                .col-xs-12
                  - if defined?(WillPaginate)
                    = will_paginate @imports
                  - elsif defined?(Kaminari)
                    = paginate @imports
