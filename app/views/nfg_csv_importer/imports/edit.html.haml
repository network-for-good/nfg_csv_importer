/ TODO: need a way to tell the importer that it's ready so it can turn on buttons (below importer columns) and change the content for the stats partial.
- ready_for_import = false

.nfg-csv-importer{ data: { unmapped_highlight: 'disabled'} }

  = render 'nfg_csv_importer/imports/import_header_file_name', import: @import

  = render 'nfg_csv_importer/imports/import_header_stats', import: @import, ready_for_import: ready_for_import

  / Doesn't work yet
  / - if @errors
  = render "nfg_csv_importer/imports/design_source/importer_errors"


  -# TODO: Consider: when horizontal scroll is detected on window, focus this container so we can avoid the user leveraging the browsser back / forward action from swiping.
  #thing.container-fluid.container-flush

    .thinger.bg-white.text-xs-center.p-t-double{ style: 'z-index:1; position: absolute; width: 100%;' }
      %p.lead
        Let's map your column headers ahead of importing your data
      %p
        %i.text-muted
          Navigate by scrolling left or right or by clicking the arrow buttons

    %a.horizontal-scroll-btn{ href: "javascript:;", data: { horizontal_scroll_button: "left" } }
      %i.fa.fa-arrow-circle-left


    %a.horizontal-scroll-btn{ href: "javascript:;", data: { horizontal_scroll_button: "right" } }
      %i.fa.fa-arrow-circle-right


    .container-importer
      = form_for @import, html: { id: "fields_mapping" } do
        .row.row-no-wrap
          - @import.mapped_fields.each_with_index do |mapped_column, index|
            = render "nfg_csv_importer/imports/importer_column", mapped_column: mapped_column, import: @import, index: index

        %div{ data: { describe: 'horizontal-scroll-ending-spacer' } }


  .container-fluid.container-flush.bg-white
    .row.p-x-base.p-t-base.p-b-triple
      .col-xs-6
        %a.btn.btn-secondary.btn-lg{ href: "javascript:;" }
          %i.fa.fa-chevron-left.m-r-quarter
          Save & Come Back Later
      .col-xs-6.text-xs-right
        %a.btn.btn-primary.btn-lg{ href: "javascript:;", class: "#{ 'disabled' unless ready_for_import }" }
          Review & Confirm Your Import
          %i.fa.fa-chevron-right.m-l-quarter


  = render "nfg_csv_importer/imports/design_source/auto_save"

  / TODO: any thoughts on how I can pass arguments / locals to this modal so that content can be customized per error message? -- this modal is rendered from a donation or individual user column error (e.g. missing first name or full name)
  = render partial: "nfg_csv_importer/imports/importer_modal", locals: { component_id: "task-modal", modal_title: "Next Steps", modal_body: "Some standard advice", no_submit: true, component_id: "nfg_csv_importer_modal", resource_color: :blue }
